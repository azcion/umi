const HEIGHT=800,GRADIENTS={desert:{colors:hexArrayToColors(["#F1C673","#EAAC4A","#2B601D","#F8DDA0","#A6D5D3"]),positions:[0,.6,.8,.85,.88]},forest:{colors:hexArrayToColors(["#3B5D0D","#13280A","#8B754B","#C8CBCC","#FFFFFF"]),positions:[0,.6,.8,.85,.99]},arctic:{colors:hexArrayToColors(["#1B3983","#264EB8","#72C8FB","#CCFDFF","#EBFAFE","#DDFFFF"]),positions:[0,.01,.1,.2,.5,.99]},oldMap:{colors:hexArrayToColors(["#96A18B","#596D5A","#1D160B","#AAA268","#EBB468","#959B5B","#1D160B","#51572A","#51572A","#1D160B","#836E4B","#E4CC95","#8D775A","#5e503b","#CFCAA2"]),positions:[0,.14,.16,.18,.25,.48,.49,.5,.51,.68,.69,.7,.8,.9,.99,1]}},CONFIG={islands:{attributes:{radial:!0}},desert:{attributes:{height:800/3,horizontal:!0,mass:500,octaves:5,frequency:.0025,water:.45},gradients:GRADIENTS.desert},forest:{attributes:{height:800,horizontal:!0,water:.4},gradients:GRADIENTS.forest},arctic:{attributes:{height:800,horizontal:!0,radial:!0,mass:300,frequency:.0025},gradients:GRADIENTS.arctic},guide_top:{attributes:{mass:1e3,persistence:.55,frequency:.001,water:.4},gradients:GRADIENTS.oldMap},guide_direction_radial:{attributes:{radial:!0},gradients:GRADIENTS.oldMap},guide_direction_horizontal:{attributes:{horizontal:!0},gradients:GRADIENTS.oldMap},guide_direction_vertical:{attributes:{vertical:!0},gradients:GRADIENTS.oldMap},guide_noise_octaves:{attributes:{octaves:3},gradients:GRADIENTS.oldMap},guide_noise_persistence:{attributes:{persistence:.8},gradients:GRADIENTS.oldMap},guide_noise_frequency:{attributes:{frequency:.05},gradients:GRADIENTS.oldMap}};function hexArrayToColors(e){return e=e.map((e=>{const t=e.replace("#","0x");return[(t>>16&255)/255,(t>>8&255)/255,(255&t)/255].map((e=>Math.round(100*e)/100))}))}class LogoTag extends HTMLElement{constructor(){super()}connectedCallback(){fetch(this.getAttribute("src")).then((e=>e.text())).then((e=>{this.innerHTML=e}))}}function paintCanvases(){switch(document.querySelector("meta[data-page]").getAttribute("data-page")){case"index":paintIndexCanvases();break;case"gallery":paintGalleryCanvases();break;case"guide":paintGuideCanvases()}}customElements.define("custom-svg",LogoTag),window.onload=paintCanvases;const Paint=class{constructor(e,t){this.frac=e,this.ppc=t}makeUmiImgs(e,t,i,a){[...document.querySelectorAll(e)].forEach((e=>{const r=e.getContext("webgl");r.canvas.width=r.canvas.width/this.ppc*this.frac,r.canvas.height=r.canvas.height/this.ppc*this.frac;const s=new Umi(r,t);s.configureShader(i),s.draw();const o=s.gl.canvas.toDataURL(),n=document.createElement("img");n.alt=a,n.src=o;e.parentNode.replaceChildren(n)}))}};async function paintIndexCanvases(){await Umi.loadShaders("glsl/");const e=document.querySelector(".grid"),t=getComputedStyle(e),i=t["grid-template-columns"].split(" ").length,a=parseInt(t.width.slice(0,-2));new Paint(a/i,200).makeUmiImgs(".umi",{},{attributes:{radial:!0}},"おそらく島の写真")}async function paintGuideCanvases(){await Umi.loadShaders("glsl/");const e=document.querySelector(".grid"),t=getComputedStyle(e),i=t["grid-template-columns"].split(" ").length,a=parseInt(t.width.slice(0,-2)),r=new Paint(a/i,200);let s={},o=CONFIG.guide_top,n="手描き地図風の地形";r.makeUmiImgs("#guide-top",s,o,n),await new Promise((e=>setTimeout(e,250))),o=CONFIG.guide_direction_radial,n="手描き地図風の島",r.makeUmiImgs("#dir-radial",s,o,n),o=CONFIG.guide_direction_horizontal,n="手描き地図風の水平地形",r.makeUmiImgs("#dir-horizontal",s,o,n),o=CONFIG.guide_direction_vertical,n="おそらく島の写真",r.makeUmiImgs("#dir-vertical",s,o,n),await new Promise((e=>setTimeout(e,150))),o=CONFIG.guide_noise_octaves,n="手描きの地図のスタイルの非常にシンプルな地形",r.makeUmiImgs("#noi-octaves",s,o,n),o=CONFIG.guide_noise_persistence,n="手描きの地図のスタイルの非常に詳細な地形",r.makeUmiImgs("#noi-persistence",s,o,n),o=CONFIG.guide_noise_frequency,n="手描きの地図のように細かく細かい島々が並ぶ、非常に断片的な世界",r.makeUmiImgs("#noi-frequency",s,o,n)}async function paintGalleryCanvases(){await Umi.loadShaders("glsl/");const e=document.querySelector(".grid"),t=getComputedStyle(e),i=t["grid-template-columns"].split(" ").length,a=parseInt(t.width.slice(0,-2)),r=(parseInt(t.height.slice(0,-2)),new Paint(a/i,200));let s={},o=CONFIG.islands,n="おそらく島の写真";r.makeUmiImgs(".islands .umi",s,o,n),await new Promise((e=>setTimeout(e,250))),s={overrideSize:!0},o=CONFIG.desert,n="おそらく砂漠のオアシスの写真",r.makeUmiImgs(".desert .umi",s,o,n),o=CONFIG.forest,n="おそらく山岳林の写真",r.makeUmiImgs(".forest .umi",s,o,n),o=CONFIG.arctic,n="おそらく氷山の写真",r.makeUmiImgs(".arctic .umi",s,o,n)}const Umi=class{constructor(e=null,t=null){e?.canvas?this.gl=e:null!==e&&console.error("Invalid context, expected WebGL"),this.options={logQuery:t?.logQuery??!1,overrideSize:t?.overrideSize??!1}}useId(e){this.gl=document.getElementById(e)?.getContext("webgl"),this.gl||console.error(`Could not find id: '${e}'`)}useClass(e){this.gl=document.getElementsByClassName(e)[0]?.getContext("webgl"),this.gl||console.error(`Could not find class: '${e}'`)}static async loadShaders(e,t="vertex",i="fragment"){const a=await this.getShaders(e,t,i);Umi._shadersTemplate={...a}}configureShader(e=null,t=!1){if(!this.gl)return void console.error("WebGL context not set.Try useId(id) or useClass(name) before running this");const i={};t?(i.attributes=Umi._attributes,i.gradients=Umi._gradients):(i.attributes=this.getAttributes(e?.attributes),i.gradients=e?.gradients||Umi._gradients),this.gl.canvas.width=i.attributes.width,this.gl.canvas.height=i.attributes.height,this.gl.viewport(0,0,this.gl.canvas.width,this.gl.canvas.height);const a=Umi.configureFragment(Umi._shadersTemplate.fragment,i);this.shadersCompiled={},this.shadersCompiled.fragment=Umi.createShader(this.gl,this.gl.FRAGMENT_SHADER,a),this.shadersCompiled.vertex=Umi.createShader(this.gl,this.gl.VERTEX_SHADER,Umi._shadersTemplate.vertex)}draw(){const e=Umi.createProgram(this.gl,this.shadersCompiled.vertex,this.shadersCompiled.fragment),t=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,1,1,-1,1]),this.gl.STATIC_DRAW);const i=this.gl.getAttribLocation(e,"Position");this.gl.vertexAttribPointer(i,2,this.gl.FLOAT,this.gl.FALSE,2*Float32Array.BYTES_PER_ELEMENT,0),this.gl.enableVertexAttribArray(i),this.gl.useProgram(e),this.gl.drawArrays(this.gl.TRIANGLE_FAN,0,4),this.gl.useProgram(null)}static configureFragment(e,t){for(const i in t)switch(i){case"gradients":e=Umi.setShaderGradients(e,t.gradients);break;case"attributes":e=Umi.setShaderAttributes(e,t.attributes)}return e}getAttributes(e=null){let t,i;e?i=t=>{let i;if(t in e)i=e[t];else if(Umi._params[t]in e)i=e[Umi.params[t]];else if(["width","height"].includes(t))return!this.options.overrideSize&&this.gl.canvas[t];return i??Umi._attributes[t]}:(t=new URLSearchParams(window.location.search),i=e=>{let i=t.get(e)??t.get(Umi._params[e]);return i||(["width","height"].includes(e)?!this.options.overrideSize&&this.gl.canvas[e]:Umi._attributes[e])});const a=e=>parseInt(e),r=e=>parseFloat(e),s=e=>[1,"1",!0,"true"].includes(e);let o=a(i("width"))||window.innerWidth,n=a(i("height"))||window.innerHeight;const l=s(i("square"));l&&(o<n?n=o:o=n);const c=a(i("offsetx"))||Math.floor(Math.random()*2**20),d=a(i("offsety"))||Math.floor(Math.random()*2**20),h=s(i("radial")),g=s(i("horizontal")),m=s(i("vertical")),u=a(i("mass")),p=a(i("octaves")),f=r(i("persistence")),S=r(i("frequency")),A=r(i("water")),_={width:o,height:n,offsetx:c,offsety:d,square:l,radial:h,_rad:h?1:0,horizontal:g,_hor:g?1:0,vertical:m,_ver:m?1:0,mass:u,octaves:p,persistence:Umi.formatShaderFloat(f),frequency:Umi.formatShaderFloat(S),water:Umi.formatShaderFloat(A)};return this.options.logQuery&&console.log(Umi.joinAttributes(_)),_}static joinAttributes(e){let t=[];for(const i in e){const a=e[i];null!=a&&"NaN"!==a&&a!==Umi._attributes[i]&&a!==Umi.formatShaderFloat(Umi._attributes[i])&&"_"!==a[0]&&t.push(`${Umi._params[i]}=${a}`)}return"?"+t.join("&")}static setShaderAttributes(e,t){for(const i in Umi._attributes)e=e.replace(`%${i}%`,Umi.getIfValid(t[i])||Umi._attributes[i]);return e}static getIfValid(e){return null!=e&&!isNaN(e)&&"NaN"!==e&&e.toString()}static setShaderGradients(e,t){let i="",a="";for(let e=0;e<t.colors.length;++e){const r=t.colors[e].map((e=>Umi.formatShaderFloat(e))),s=Umi.formatShaderFloat(t.positions[e]);i+=`COL[${e}] = vec4(${r[0]}, ${r[1]}, ${r[2]}, 1.);\n\t`,a+=`POS[${e}] = ${s};\n\t`}return e=(e=(e=e.replace(/%ncolors%/,t.colors.length)).replace(/%colors%/,i)).replace(/%positions%/,a)}static formatShaderFloat(e){if(isNaN(e))return"NaN";let t=e.toString();if(!t.includes("."))return t+".";const i=t.split(".");return"0"!==i[0]?t:"."+i[1]}static async getShaders(e,t,i){const a=[t,i],r={};for(const t of a)r[t]=await Umi.getFile(`${e}${t}.glsl`);return r}static async getFile(e){return(await fetch(e,{method:"GET"})).text()}static createShader(e,t,i){const a=e.createShader(t);e.shaderSource(a,i),e.compileShader(a);if(e.getShaderParameter(a,e.COMPILE_STATUS))return a;console.log(Umi.enumerateSource(i)),console.error(e.getShaderInfoLog(a)),e.deleteShader(a)}static createProgram(e,t,i){const a=e.createProgram();e.attachShader(a,t),e.attachShader(a,i),e.linkProgram(a);if(e.getProgramParameter(a,e.LINK_STATUS))return a;console.log(e.getProgramInfoLog(a)),e.deleteProgram(a)}static enumerateSource(e){return e.split("\n").map(((e,t)=>`${("   "+t).slice(-3)}: ${e}`)).join("\n")}};Umi._shadersTemplate={},Umi._attributes={width:256,height:256,offsetx:0,offsety:0,square:!1,radial:!1,horizontal:!1,vertical:!1,mass:150,octaves:6,persistence:.6,frequency:.005,water:.5,_rad:0,_hor:0,_ver:0},Umi._params={width:"w",height:"h",offsetx:"x",offsety:"y",square:"sq",radial:"r",horizontal:"hz",vertical:"vt",mass:"m",octaves:"o",persistence:"p",frequency:"f",water:"wt"},Umi._gradients={colors:[[.04,.32,.68],[.23,.51,.83],[.61,.89,.99],[.75,.65,.45],[.31,.45,.14],[.71,.73,.47],[.94,.93,.91]],positions:[0,.15,.2,.24,.33,.7,.8]};
//# sourceMappingURL=script.min.js.map
