const HEIGHT=800,GRADIENTS={desert:{colors:hexArrayToColors(["#F1C673","#EAAC4A","#2B601D","#F8DDA0","#A6D5D3"]),positions:[0,.6,.8,.85,.88]},forest:{colors:hexArrayToColors(["#3B5D0D","#13280A","#8B754B","#C8CBCC","#FFFFFF"]),positions:[0,.6,.8,.85,.99]},arctic:{colors:hexArrayToColors(["#1B3983","#264EB8","#72C8FB","#CCFDFF","#EBFAFE","#DDFFFF"]),positions:[0,.01,.1,.2,.5,.99]},oldMap:{colors:hexArrayToColors(["#96A18B","#596D5A","#1D160B","#AAA268","#EBB468","#959B5B","#1D160B","#51572A","#51572A","#1D160B","#836E4B","#E4CC95","#8D775A","#5e503b","#CFCAA2"]),positions:[0,.14,.16,.18,.25,.48,.49,.5,.51,.68,.69,.7,.8,.9,.99,1]}},CONFIG={islands:{attributes:{radial:!0}},desert:{attributes:{height:800/3,horizontal:!0,mass:500,octaves:5,frequency:.0025,water:.45},gradients:GRADIENTS.desert},forest:{attributes:{height:800,horizontal:!0,water:.4},gradients:GRADIENTS.forest},arctic:{attributes:{height:800,horizontal:!0,radial:!0,mass:300,frequency:.0025},gradients:GRADIENTS.arctic},guide_top:{attributes:{mass:1e3,persistence:.55,frequency:.001,water:.4},gradients:GRADIENTS.oldMap},guide_direction_radial:{attributes:{radial:!0},gradients:GRADIENTS.oldMap},guide_direction_horizontal:{attributes:{horizontal:!0},gradients:GRADIENTS.oldMap},guide_direction_vertical:{attributes:{vertical:!0},gradients:GRADIENTS.oldMap},guide_noise_octaves:{attributes:{octaves:3},gradients:GRADIENTS.oldMap},guide_noise_persistence:{attributes:{persistence:.8},gradients:GRADIENTS.oldMap},guide_noise_frequency:{attributes:{frequency:.05},gradients:GRADIENTS.oldMap},postcard:{attributes:{radial:!0,mass:60,octaves:4,frequency:.0035},gradients:{colors:[[0,0,0],[1,1,1]],positions:[0,1]}}};function hexArrayToColors(t){return t=t.map((t=>{const e=t.replace("#","0x");return[(e>>16&255)/255,(e>>8&255)/255,(255&e)/255].map((t=>Math.round(100*t)/100))}))}class LogoTag extends HTMLElement{constructor(){super()}connectedCallback(){fetch(this.getAttribute("src")).then((t=>t.text())).then((t=>{this.innerHTML=t}))}}function paintCanvases(){switch(document.querySelector("meta[data-page]").getAttribute("data-page")){case"index":paintIndexCanvases();break;case"gallery":paintGalleryCanvases();break;case"guide":paintGuideCanvases();break;case"travel":paintTravelCanvases()}}customElements.define("custom-svg",LogoTag),window.onload=paintCanvases;const Paint=class{constructor(t,e){this.frac=t,this.ppc=e}makeUmiImgs(t,e,a,r){[...document.querySelectorAll(t)].forEach((t=>{const i=t.getContext("webgl");i.canvas.width=i.canvas.width/this.ppc*this.frac,i.canvas.height=i.canvas.height/this.ppc*this.frac;const s=new Umi(i,e);s.configureShader(a),s.draw();const n=s.gl.canvas.toDataURL(),o=document.createElement("img");o.alt=r,o.src=n;t.parentNode.replaceChildren(o)}))}makeUmiCanvas(t,e,a,r){const i=document.querySelector(t),s=i.getContext("webgl");s.canvas.width=s.canvas.width/this.ppc*this.frac,s.canvas.height=s.canvas.height/this.ppc*this.frac;const n=new Umi(s,e);n.configureShader(a),n.draw();const o=n.gl.canvas.toDataURL("image/jpeg",.2),l=document.createElement("img");l.hidden=!0,l.src=o;const c=i.parentNode;c.replaceChildren(l);const d=document.createElement("canvas");d.width=256,d.height=256,c.appendChild(d);const g=d.getContext("2d");l.onload=()=>{Paint.construct(l,g);const t=document.createElement("img");t.alt=r,t.src=g.canvas.toDataURL("image/png",0),c.replaceChildren(t);const e=document.createElement("img");e.id="branch",e.alt="桜の枝",e.src="img/branch.png",c.appendChild(e);const a=document.createElement("img");a.id="sakura",a.alt="桜の花",a.src="img/sakura.png",c.appendChild(a)}}static construct(t,e){e.drawImage(t,0,0),t.parentNode.removeChild(t);const a=e.getImageData(0,0,256,256);e.canvas.height=128;const r=a.data,i=16,s=[];for(let t=0;t<256;t+=i){const e=[];for(let a=0;a<256;++a){const i=4*(256*t+a);e.push(r[i])}for(let t=1;t<255;++t){const a=.7*e[t-1]+.15*(e[t]+e[t+1]);e[t]=parseInt(a)}s.push(e)}const n=t=>hexArrayToColors([t])[0].map((t=>parseInt(255*t))),o=t=>({r:t[0],g:t[1],b:t[2]}),l=o(n("#f98d27")),c=(o(n("#555555")),[o(n("#0a51ad")),o(n("#3a82d3")),o(n("#9be2fc")),o(n("#bfa572")),o(n("#4f7223")),o(n("#b5ba77")),o(n("#efede8"))]),d=[0,.15,.2,.205,.25,.7,.8].map((t=>255*t)),g=new Array(131072);for(let t=0;t<16;++t)for(let e=0;e<256;++e){const a=s[t][e],r=a*(.5*t/16),n=r/a;for(let a=0;a<=r;++a){const r=a+8*(16-t);let s,o=255-(16-t)*i*.75;o=1-o/255,o/=1.5;const h=a/n;if(0===a){s=c[0];for(let t=0;t<8;++t){const a=4*(256*(255-(r+t))+e);g[a]=Paint.lerp(s.r,l.r,o),g[a+1]=Paint.lerp(s.g,l.g,o),g[a+2]=Paint.lerp(s.b,l.b,o),g[a+3]=255}continue}s=Paint.pickColor(h,c,d);const m=4*(256*(255-r)+e);g[m]=Paint.lerp(s.r,l.r,o),g[m+1]=Paint.lerp(s.g,l.g,o),g[m+2]=Paint.lerp(s.b,l.b,o),g[m+3]=255}}a.data.set(g),e.putImageData(a,0,-120)}static pickColor(t,e,a){if(t<=a[0])return e[0];for(let r=1;r<e.length;++r)if(t<=a[r]){const i=(t-a[r-1])/(a[r]-a[r-1]);return Paint.lerpColor(e[r-1],e[r],i)}return e[e.length-1]}static lerpColor(t,e,a){return{r:Paint.lerp(t.r,e.r,a),g:Paint.lerp(t.g,e.g,a),b:Paint.lerp(t.b,e.b,a)}}static lerp(t,e,a){return(1-a)*t+a*e}};async function paintIndexCanvases(){await Umi.loadShaders("glsl/");const t=document.querySelector(".grid"),e=getComputedStyle(t),a=e["grid-template-columns"].split(" ").length,r=parseInt(e.width.slice(0,-2));new Paint(r/a,100).makeUmiImgs(".umi",{},{attributes:{radial:!0}},"おそらく島の写真")}async function paintGuideCanvases(){await Umi.loadShaders("glsl/");const t=document.querySelector(".grid"),e=getComputedStyle(t),a=e["grid-template-columns"].split(" ").length,r=parseInt(e.width.slice(0,-2)),i=new Paint(r/a,200);let s={},n=CONFIG.guide_top,o="手描き地図風の地形";i.makeUmiImgs("#guide-top",s,n,o),await new Promise((t=>setTimeout(t,250))),n=CONFIG.guide_direction_radial,o="手描き地図風の島",i.makeUmiImgs("#dir-radial",s,n,o),n=CONFIG.guide_direction_horizontal,o="手描き地図風の水平地形",i.makeUmiImgs("#dir-horizontal",s,n,o),n=CONFIG.guide_direction_vertical,o="おそらく島の写真",i.makeUmiImgs("#dir-vertical",s,n,o),await new Promise((t=>setTimeout(t,150))),n=CONFIG.guide_noise_octaves,o="手描きの地図のスタイルの非常にシンプルな地形",i.makeUmiImgs("#noi-octaves",s,n,o),n=CONFIG.guide_noise_persistence,o="手描きの地図のスタイルの非常に詳細な地形",i.makeUmiImgs("#noi-persistence",s,n,o),n=CONFIG.guide_noise_frequency,o="手描きの地図のように細かく細かい島々が並ぶ、非常に断片的な世界",i.makeUmiImgs("#noi-frequency",s,n,o)}async function paintGalleryCanvases(){await Umi.loadShaders("glsl/");const t=document.querySelector(".grid"),e=getComputedStyle(t),a=e["grid-template-columns"].split(" ").length,r=parseInt(e.width.slice(0,-2)),i=(parseInt(e.height.slice(0,-2)),new Paint(r/a,200));let s={},n=CONFIG.islands,o="おそらく島の写真";i.makeUmiImgs(".islands .umi",s,n,o),await new Promise((t=>setTimeout(t,250))),s={overrideSize:!0},n=CONFIG.desert,o="おそらく砂漠のオアシスの写真",i.makeUmiImgs(".desert .umi",s,n,o),n=CONFIG.forest,o="おそらく山岳林の写真",i.makeUmiImgs(".forest .umi",s,n,o),n=CONFIG.arctic,o="おそらく氷山の写真",i.makeUmiImgs(".arctic .umi",s,n,o)}async function paintTravelCanvases(){await Umi.loadShaders("glsl/");const t=new Paint(256,100);let e=CONFIG.postcard;t.makeUmiCanvas(".umi",{},e,"島々の絵葉書")}const Umi=class{constructor(t=null,e=null){t?.canvas?this.gl=t:null!==t&&console.error("Invalid context, expected WebGL"),this.options={logQuery:e?.logQuery??!1,overrideSize:e?.overrideSize??!1}}useId(t){this.gl=document.getElementById(t)?.getContext("webgl"),this.gl||console.error(`Could not find id: '${t}'`)}useClass(t){this.gl=document.getElementsByClassName(t)[0]?.getContext("webgl"),this.gl||console.error(`Could not find class: '${t}'`)}static async loadShaders(t,e="vertex",a="fragment"){const r=await this.getShaders(t,e,a);Umi._shadersTemplate={...r}}configureShader(t=null,e=!1){if(!this.gl)return void console.error("WebGL context not set.Try useId(id) or useClass(name) before running this");const a={};e?(a.attributes=Umi._attributes,a.gradients=Umi._gradients):(a.attributes=this.getAttributes(t?.attributes),a.gradients=t?.gradients||Umi._gradients),this.gl.canvas.width=a.attributes.width,this.gl.canvas.height=a.attributes.height,this.gl.viewport(0,0,this.gl.canvas.width,this.gl.canvas.height);const r=Umi.configureFragment(Umi._shadersTemplate.fragment,a);this.shadersCompiled={},this.shadersCompiled.fragment=Umi.createShader(this.gl,this.gl.FRAGMENT_SHADER,r),this.shadersCompiled.vertex=Umi.createShader(this.gl,this.gl.VERTEX_SHADER,Umi._shadersTemplate.vertex)}draw(){const t=Umi.createProgram(this.gl,this.shadersCompiled.vertex,this.shadersCompiled.fragment),e=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,1,1,-1,1]),this.gl.STATIC_DRAW);const a=this.gl.getAttribLocation(t,"Position");this.gl.vertexAttribPointer(a,2,this.gl.FLOAT,this.gl.FALSE,2*Float32Array.BYTES_PER_ELEMENT,0),this.gl.enableVertexAttribArray(a),this.gl.useProgram(t),this.gl.drawArrays(this.gl.TRIANGLE_FAN,0,4),this.gl.useProgram(null)}static configureFragment(t,e){for(const a in e)switch(a){case"gradients":t=Umi.setShaderGradients(t,e.gradients);break;case"attributes":t=Umi.setShaderAttributes(t,e.attributes)}return t}getAttributes(t=null){let e,a;t?a=e=>{let a;if(e in t)a=t[e];else if(Umi._params[e]in t)a=t[Umi.params[e]];else if(["width","height"].includes(e))return!this.options.overrideSize&&this.gl.canvas[e];return a??Umi._attributes[e]}:(e=new URLSearchParams(window.location.search),a=t=>{let a=e.get(t)??e.get(Umi._params[t]);return a||(["width","height"].includes(t)?!this.options.overrideSize&&this.gl.canvas[t]:Umi._attributes[t])});const r=t=>parseInt(t),i=t=>parseFloat(t),s=t=>[1,"1",!0,"true"].includes(t);let n=r(a("width"))||window.innerWidth,o=r(a("height"))||window.innerHeight;const l=s(a("square"));l&&(n<o?o=n:n=o);const c=r(a("offsetx"))||Math.floor(Math.random()*2**20),d=r(a("offsety"))||Math.floor(Math.random()*2**20),g=s(a("radial")),h=s(a("horizontal")),m=s(a("vertical")),u=r(a("mass")),p=r(a("octaves")),f=i(a("persistence")),C=i(a("frequency")),v=i(a("water")),S={width:n,height:o,offsetx:c,offsety:d,square:l,radial:g,_rad:g?1:0,horizontal:h,_hor:h?1:0,vertical:m,_ver:m?1:0,mass:u,octaves:p,persistence:Umi.formatShaderFloat(f),frequency:Umi.formatShaderFloat(C),water:Umi.formatShaderFloat(v)};return this.options.logQuery&&console.log(Umi.joinAttributes(S)),S}static joinAttributes(t){let e=[];for(const a in t){const r=t[a];null!=r&&"NaN"!==r&&r!==Umi._attributes[a]&&r!==Umi.formatShaderFloat(Umi._attributes[a])&&"_"!==r[0]&&e.push(`${Umi._params[a]}=${r}`)}return"?"+e.join("&")}static setShaderAttributes(t,e){for(const a in Umi._attributes)t=t.replace(`%${a}%`,Umi.getIfValid(e[a])||Umi._attributes[a]);return t}static getIfValid(t){return null!=t&&!isNaN(t)&&"NaN"!==t&&t.toString()}static setShaderGradients(t,e){let a="",r="";for(let t=0;t<e.colors.length;++t){const i=e.colors[t].map((t=>Umi.formatShaderFloat(t))),s=Umi.formatShaderFloat(e.positions[t]);a+=`COL[${t}] = vec4(${i[0]}, ${i[1]}, ${i[2]}, 1.);\n\t`,r+=`POS[${t}] = ${s};\n\t`}return t=(t=(t=t.replace(/%ncolors%/,e.colors.length)).replace(/%colors%/,a)).replace(/%positions%/,r)}static formatShaderFloat(t){if(isNaN(t))return"NaN";let e=t.toString();if(!e.includes("."))return e+".";const a=e.split(".");return"0"!==a[0]?e:"."+a[1]}static async getShaders(t,e,a){const r=[e,a],i={};for(const e of r)i[e]=await Umi.getFile(`${t}${e}.glsl`);return i}static async getFile(t){return(await fetch(t,{method:"GET"})).text()}static createShader(t,e,a){const r=t.createShader(e);t.shaderSource(r,a),t.compileShader(r);if(t.getShaderParameter(r,t.COMPILE_STATUS))return r;console.log(Umi.enumerateSource(a)),console.error(t.getShaderInfoLog(r)),t.deleteShader(r)}static createProgram(t,e,a){const r=t.createProgram();t.attachShader(r,e),t.attachShader(r,a),t.linkProgram(r);if(t.getProgramParameter(r,t.LINK_STATUS))return r;console.log(t.getProgramInfoLog(r)),t.deleteProgram(r)}static enumerateSource(t){return t.split("\n").map(((t,e)=>`${("   "+e).slice(-3)}: ${t}`)).join("\n")}};Umi._shadersTemplate={},Umi._attributes={width:256,height:256,offsetx:0,offsety:0,square:!1,radial:!1,horizontal:!1,vertical:!1,mass:150,octaves:6,persistence:.6,frequency:.005,water:.5,_rad:0,_hor:0,_ver:0},Umi._params={width:"w",height:"h",offsetx:"x",offsety:"y",square:"sq",radial:"r",horizontal:"hz",vertical:"vt",mass:"m",octaves:"o",persistence:"p",frequency:"f",water:"wt"},Umi._gradients={colors:[[.04,.32,.68],[.23,.51,.83],[.61,.89,.99],[.75,.65,.45],[.31,.45,.14],[.71,.73,.47],[.94,.93,.91]],positions:[0,.15,.2,.24,.33,.7,.8]};
//# sourceMappingURL=script.min.js.map
